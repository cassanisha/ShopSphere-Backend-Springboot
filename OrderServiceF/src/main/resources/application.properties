spring.application.name=OrderServiceF
server.port=${ORDER_SERVICE_PORT}

#for oaauth issuer uri
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${AUTH_SERVER_URI}

# = DATA SOURCE
# ===============================
spring.datasource.url=${ORDER_DB_URI}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# = JPA / HIBERNATE
# Automatically update schema (you can use validate / create / create-drop instead)
spring.jpa.hibernate.ddl-auto=update
# Show SQL in console
spring.jpa.show-sql=true
# Dialect for MySQL (Spring Boot usually detects this automatically, but good to set explicitly)
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect


#kafka
spring.kafka.bootstrap-servers=kafka:9092

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=${EUREKA_URI}
