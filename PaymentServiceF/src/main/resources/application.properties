spring.application.name=PaymentServiceF
server.port=${PAYMENT_PORT}


#for eureka service
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=${EUREKA_URI}

# = DATA SOURCE
# ===============================
spring.datasource.url=${PAYMENT_DB_URI}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# = JPA / HIBERNATE
# Automatically update schema (you can use validate / create / create-drop instead)
spring.jpa.hibernate.ddl-auto=update
# Show SQL in console
spring.jpa.show-sql=true
# Dialect for MySQL (Spring Boot usually detects this automatically, but good to set explicitly)
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

#Kafka
spring.kafka.bootstrap-servers=kafka:9092

#paymentconfig
# ===== AUTH SERVER =====
auth.server.token.url=http://user-service:8082/oauth2/token

# ===== PAYMENT SERVICE =====
payment.service.client-id=${PAYMENT_SERVICE_CLIENT_ID}
payment.service.client-secret=${PAYMENT_SERVICE_CLIENT_SECRET}

# ===== ORDER SERVICE =====
order.service.url=http://order-service:8084
